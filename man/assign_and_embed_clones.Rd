% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sc_assign_clones_to_cells.R
\name{assign_and_embed_clones}
\alias{assign_and_embed_clones}
\title{Assign Clones to Cells and Embed the Assignment to SingleCellExperiment Object}
\usage{
assign_and_embed_clones(
  cell_by_gene_mat,
  cell_clone_reads_dt,
  cell_bcode_col = "CellBarcode",
  barcode_edit_dist_col = "BarcodeEditDist",
  clone_bcode_col = "CloneBarcode",
  umi_col = "UMI",
  most_dominant_threshold = 0.5,
  umi_clone_consensus_threshold = 0.7,
  embed_to_mat = TRUE
)
}
\arguments{
\item{cell_by_gene_mat}{A SingleCellExperiment object containing the
cell-by-gene matrix. It must have a 'Barcode' column in 'colData' that
uniquely identifies each cell. The barcodes should match those in the
`cell_clone_reads_dt` data table.}

\item{cell_clone_reads_dt}{A data.table object representing the reads. Each
row includes information about a cell, UMI, and clone barcode. For data
produced by NextClone, use `fread` from the data.table package and pass the
resulting object to this parameter.}

\item{cell_bcode_col}{Name of the column in `cell_clone_reads_dt` that
indicates the cell barcode for each read.}

\item{barcode_edit_dist_col}{Name of the column in `cell_clone_reads_dt` that
indicates the edit distance for the clone barcode of each read.}

\item{clone_bcode_col}{Name of the column in `cell_clone_reads_dt` that
specifies the clone barcode for each read.}

\item{umi_col}{Name of the column in `cell_clone_reads_dt` that specifies the
UMI barcode for each read.}

\item{most_dominant_threshold}{A numeric value between 0 and 1 specifying the
proportion threshold of reads that must be associated with a clone barcode to
assign it to a cell in cases where multiple clone barcodes are detected.}

\item{umi_clone_consensus_threshold}{A numeric value between 0 and 1 specifying
the proportion threshold of reads for collapsing UMIs when computing the
cell-by-clone matrix.
See details for more information.}

\item{embed_to_mat}{A boolean indicating whether to embed the clone barcode
assignment directly into the `cell_by_gene_mat` object.}
}
\value{
Depending on the `embed_to_mat` parameter, this function returns either
an updated SingleCellExperiment object with clone barcode assignments embedded
or a data.table with the cell-clone assignments.
}
\description{
This function assigns clone barcodes to cells and optionally embeds the
assignment into a SingleCellExperiment object. It calculates a cell-by-clone
matrix from a provided data.table where each row corresponds to a read
associated with a cell, UMI, and clone barcode.
See details for the assignment method.
}
\details{
Clone barcode assignment to cells follows a tiered approach:
Cells with a single detected clone barcode are straightforwardly assigned to that clone.
In cases where multiple clone barcodes are present, the most dominant clone barcode
(constituting over 50% of reads, adjustable via `most_dominant_threshold`) is assigned.
Remaining cells, where no clone barcode is sufficiently dominant, are assigned based
on the lowest average barcode edit distance. If edit distances are equal, the clone
barcode with the higher read count prevails.
To use the default 50% threshold, set `most_dominant_threshold` to 0.5.

The cell-by-clone matrix construction first collapses reads with the same cell
and UMI barcodes
For a group of reads have the same cell barcode and UMI barcode,
if the reads are mapped to several clone barcodes,
by default, they are collapsed into one read and assigned to the clone barcode
comprising 70\% or more of its group's reads.
This threshold modifiable by the `umi_clone_consensus_threshold` parameter.
To apply the default threshold of 70\%, set this parameter to 0.7.
}
\examples{
library(scater)
library(data.table)

set.seed(42)

sce <- mockSCE(ncells = 4, ngenes = 100)
colData(sce)$Barcode <- colnames(sce)

cell_clone_reads_dt <- data.table(
    CellBarcode = c(
        rep("Cell_001", 6),
        rep("Cell_002", 7),
        rep("Cell_003", 4),
        rep("Cell_004", 5)
    ),
    CloneBarcode = c(
        rep("AA", 6),
        rep("BB1", 4), rep("BB2", 3),
        rep("CC1", 2), rep("CC2", 2),
        rep("CC1", 2), "DD1", "DD2", "DD3"
    ),
    BarcodeEditDist = c(
        rep(0L, 6),
        rep(0L, 7),
        c(0, 1, 2, 1),
        rep(0, 5)

    )
)
cell_clone_reads_dt[, UMI := seq_len(nrow(cell_clone_reads_dt))]

sce_with_clone <- assign_and_embed_clones(
    cell_by_gene_mat = sce,
    cell_clone_reads_dt = cell_clone_reads_dt,
    cell_bcode_col = "CellBarcode",
    barcode_edit_dist_col = "BarcodeEditDist",
    clone_bcode_col = "CloneBarcode",
    umi_col = "UMI"
)
colData(sce_with_clone)

}
